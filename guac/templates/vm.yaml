apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  annotations:
    massopen.cloud/password: "{{ CLOUD_USER_PASSWORD }}"
    vm.kubevirt.io/validations: |
      [
        {
          "name": "minimal-required-memory",
          "path": "jsonpath::.spec.domain.resources.requests.memory",
          "rule": "integer",
          "message": "This VM requires more memory.",
          "min": 1610612736
        }
      ]
  labels:
    kubevirt.io/domain: "{{ NAME }}"
  name: "{{ NAME }}-vm"
spec:
  dataVolumeTemplates:
    - metadata:
        name: "{{ NAME }}-rootdisk"
      spec:
        pvc:
          accessModes:
            - ReadWriteMany
          resources:
            requests:
              storage: "{{ ROOTDISK.SIZE|default('10Gi') }}"
          volumeMode: Block
        source:
          pvc:
            name: "{{ ROOTDISK.SOURCE }}"
            namespace: "{{ ROOTDISK.NAMESPACE }}"
  running: true
  template:
    metadata:
      annotations:
        vm.kubevirt.io/os: fedora35
      labels:
        kubevirt.io/domain: "{{ NAME }}"
    spec:
      domain:
        cpu:
          cores: 4
          sockets: 1
          threads: 1
        devices:
          disks:
            - disk:
                bus: virtio
              name: cloudinitdisk
            - bootOrder: 1
              disk:
                bus: virtio
              name: rootdisk
          inputs:
            - bus: virtio
              name: tablet
              type: tablet
          interfaces:
            - model: virtio
              name: default
              masquerade: {}
          networkInterfaceMultiqueue: true
        machine:
          type: pc-q35-rhel8.4.0
        resources:
          limits:
            cpu: 2
            memory: 8Gi
          requests:
            cpu: 2
            memory: 8Gi
      evictionStrategy: LiveMigrate
      hostname: "{{ NAME }}"
      networks:
        - name: default
          pod: {}
      terminationGracePeriodSeconds: 180
      volumes:
        - cloudInitConfigDrive:
            secretRef:
              name: "userdata-{{ NAME }}"
          name: cloudinitdisk
        - dataVolume:
            name: "{{ NAME }}-rootdisk"
          name: rootdisk
